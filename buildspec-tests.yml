version: 0.2

# Use a CodeBuild image like: aws/codebuild/standard:7.0 (supports these runtimes)
env:
  variables:
    SERVICES: "adservice cartservice checkoutservice currencyservice emailservice frontend paymentservice productcatalogservice recommendationservice shippingservice loadgenerator"

phases:
  install:
    runtime-versions:
      nodejs: 18          # paymentservice / any JS utilities
      java: corretto17    # adservice
      python: 3.10        # recommendationservice / loadgenerator (use 3.8 if you prefer)
      golang: 1.20        # checkout/shipping/productcatalog/frontend (Go)
    commands:
      - echo "Installing additional test tools..."
      - yum install -y git jq tar gzip || true
      - pip3 install --upgrade pip pytest pytest-cov || true
      - npm --version && node --version || true
      - mvn --version || true
      - go version || true
      - python3 --version || true

  pre_build:
    commands:
      - echo "Verifying repository layout..."
      - ls -la || true
      - test -d src && ls -la src || echo "WARNING:'src' directory not found"

  build:
    commands:
      - set -e
      - echo "=== Running best-effort unit tests per service ==="
      - |
        for s in $SERVICES; do
          echo ""
          echo "------------------------------------------------------------"
          echo "SERVICE: $s"
          echo "------------------------------------------------------------"
          if [ ! -d "src/$s" ]; then
            echo "Skip: src/$s not found"; continue
          fi
          pushd "src/$s" >/dev/null

          # 1) Java (Maven)
          if [ -f "pom.xml" ]; then
            echo "[JAVA] mvn -q -DskipTests=false test"
            mvn -q -DskipTests=false test || true

          # 2) Node.js
          elif [ -f "package.json" ]; then
            echo "[NODE] npm ci && npm test (if defined)"
            npm ci || true
            if node -e "p=require('./package.json');process.exit(p.scripts&&p.scripts.test?0:1)"; then
              npm test --silent || true
            else
              echo "No npm test script defined -> skipping tests"
            fi

          # 3) Go (go.mod)
          elif [ -f "go.mod" ]; then
            echo "[GO] go mod tidy && go test ./..."
            go mod tidy || true
            go test ./... || true

          # 4) Python
          elif [ -f "requirements.txt" ] || ls -1 *.py 2>/dev/null | grep -q . ; then
            echo "[PYTHON] install deps (if any) and run pytest if tests found"
            [ -f "requirements.txt" ] && pip3 install -r requirements.txt || true
            if [ -d "tests" ] || ls -1 *_test.py 2>/dev/null | grep -q . ; then
              pytest -q || true
            else
              echo "No pytest tests found -> skipping"
            fi

          # 5) .NET (cartservice)
          elif ls -1 *.sln *.csproj 2>/dev/null | grep -q . ; then
            echo "[.NET] Detected cartservice. .NET SDK not present in standard image -> skipping tests."
            echo "Tip: use a .NET-enabled CodeBuild image or a dedicated project if you want to run them."

          else
            echo "No recognizable build/test files -> skipping"
          fi

          popd >/dev/null
        done

  post_build:
    commands:
      - echo "All service test phases completed (best-effort)."

artifacts:
  files:
    - '**/*'
  discard-paths: yes