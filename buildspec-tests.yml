version: 0.2

env:
  variables:
    SERVICES: "adservice cartservice checkoutservice currencyservice emailservice frontend paymentservice productcatalogservice recommendationservice shippingservice loadgenerator"

phases:
  install:
    runtime-versions:
      nodejs: 18
      java: corretto17
      python: 3.10      # change to 3.8 if your image lacks 3.10
      golang: 1.20
    commands:
      - echo "USING buildspec-tests.yml v1.1"
      - yum install -y git jq tar gzip || true
      - pip3 install --upgrade pip pytest pytest-cov || true
      - npm --version && node --version || true
      - mvn --version || true
      - go version || true
      - python3 --version || true

  pre_build:
    commands:
      - echo "Verifying repository layout..."
      - ls -la || true
      - test -d src && ls -la src || echo "WARNING:src directory not found"

  build:
    commands:
      - set -e
      - echo "=== Running best-effort unit tests per service ==="
      - |
        for s in $SERVICES; do
          echo ""
          echo "------------------------------------------------------------"
          echo "SERVICE: $s"
          echo "------------------------------------------------------------"
          if [ ! -d "src/$s" ]; then
            echo "Skip: src/$s not found"; continue
          fi

          # run each service in a subshell to avoid directory state issues
          (
            cd "src/$s" || exit 0

            if [ -f "pom.xml" ]; then
              echo "[JAVA] mvn -q -DskipTests=false test"
              mvn -q -DskipTests=false test || true

            elif [ -f "package.json" ]; then
              echo "[NODE] npm ci && npm test (if defined)"
              npm ci || true
              if node -e "p=require('./package.json');process.exit(p.scripts&&p.scripts.test?0:1)"; then
                npm test --silent || true
              else
                echo "No npm test script defined -> skipping"
              fi

            elif [ -f "go.mod" ]; then
              echo "[GO] go mod tidy && go test ./..."
              go mod tidy || true
              go test ./... || true

            elif [ -f "requirements.txt" ] || ls -1 *.py 2>/dev/null | grep -q . ; then
              echo "[PY] pip install -r requirements.txt (if any) and pytest if tests found"
              [ -f "requirements.txt" ] && pip3 install -r requirements.txt || true
              if [ -d "tests" ] || ls -1 *_test.py 2>/dev/null | grep -q . ; then
                pytest -q || true
              else
                echo "No pytest tests found -> skipping"
              fi

            elif ls -1 *.sln *.csproj 2>/dev/null | grep -q . ; then
              echo "[.NET] Detected cartservice; no dotnet SDK in standard image -> skipping tests"

            else
              echo "No recognizable build/test files -> skipping"
            fi
          )

        done

  post_build:
    commands:
      - echo "All service test phases completed (best-effort)."

artifacts:
  files:
    - '**/*'
  discard-paths: yes