name: Reusable_ci workflow
on:
    workflow_call:
        inputs:
            service:
                required: true
                type: string
            language:
                required: true
                type: string
            sonar_project_key:
                required: false
                type: string
            working_dir:
                required: false
                type: string
                default: src/${{ inputs.service }}
            
jobs:
    ci:
        name: CI for ${{ inputs.service }}
        runs-on: ubuntu-latest
        
        defaults:
            run:
                working-directory: ${{ inputs.working_dir }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v5

            ######Language setup######
            - name: setup Node.js
              if: ${{ inputs.language == 'nodejs' }}
              uses: actions/setup-node@v5
              with:
                  node-version: '20'
                  cache: 'npm'

            - name: setup Python
              if: ${{ inputs.language=='python' }}
              uses: actions/setup-python@v5
              with:
                  python-version: '3.11'
                  cache: 'pip'

            - name: setup Go
              if: ${{ inputs.language=='go' }}
              uses: actions/setup-go@v5
              with:
                  go-version: '1.22'
                  cache: true
                  cache-dependency-path: '**/go.sum'
            
            - name: setup Java
              if: ${{ inputs.language=='java' }}
              uses: actions/setup-java@v5
              with:
                  distribution: 'temurin'
                  java-version: '21'

            - name: Setup .NET
              if: ${{ inputs.language == 'csharp' }}
              uses: actions/setup-dotnet@v4
              with:
                dotnet-version: '8.0.x'
            
            ######Install dependencies######
            - name: Install dependencies and run tests
              run: |
                if [ -f package.json ]; then 
                    npm install 
                    npm test; 
                fi
                                 # ----> Node.js
                if [ -f requirements.txt ]; then 
                    pip install -r requirements.txt 
                    pytest; 
                fi
                                 # ----> Python
                if [ -f go.mod ]; then
                    go mod tidy
                    go test ./... -v;
                fi
                                 # ----> Go
                if ls **/*Test.java >/dev/null 2>&1; then 
                    ./mvnw -q test; 
                fi
                                 # ----> Java (Maven)

            
            - name: Restore and Test (.NET)
              if: ${{ inputs.language == 'csharp' }}
              run: |
                dotnet restore
                dotnet test --verbosity normal
            
            ######SonarQube Analysis######
            - name: SonarQube Scan
              if: ${{ inputs.sonar_project_key != '' }}
              uses: SonarSource/sonarqube-scan-action@v6
              env:
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                SONAR_HOST_URL: https://sonarcloud.io
              with:
                projectBaseDir: ${{ inputs.working_dir }}
                args: >
                  -Dsonar.projectKey=${{ inputs.sonar_project_key }}
                  -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
                  -Dsonar.qualitygate.wait=true

            ######TrivyFSScan######
            - name: Trivy FS Scan
              uses: aquasecurity/trivy-action@0.33.1
              with:
                scan-type: fs
                format: sarif
                ignore-unfixed: 'true'
                output: trivy-fs-${{ inputs.service }}.sarif
                severity: 'CRITICAL,HIGH'

            - name: Upload sarif file
              uses: github/codeql-action/upload-sarif@v3
              with:
                sarif_file: trivy-fs-${{ inputs.service }}.sarif