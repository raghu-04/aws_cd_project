name: CI file triggers the Tests based on the changes

on:
    push:
        branches:
            - main
        paths:
            - 'src/**'
            - '.github/workflows/ci.yml'
            - '.github/workflows/_reusable_ci.yml'
            - '.github/workflows/build-scan-push.yml'
            - '.github/workflows/terraform-ecr.yml'
    pull_request:
        branches:
            - main
        paths:
            - 'src/**'
            - '.github/workflows/ci.yml'
            - '.github/workflows/_reusable_ci.yml'
            - '.github/workflows/build-scan-push.yml'
            - '.github/workflows/terraform-ecr.yml'
permissions:
    contents: read
    security-events: write
    id-token: write

concurrency:
    group: ci-${{ github.ref }}
    cancel-in-progress: true

env:
    AWS_REGION_DEFAULT: us-east-1
    ECR_NAMESPACE_DEFAULT: online-botique

jobs: 
  ################SONARQUBE SCAN + TESTS#######################
    sonar_each:
        name: SonarQube scan + Tests (${{ matrix.service }})
        uses: ./.github/workflows/_reusable_ci.yml
        secrets: inherit
        strategy:
            fail-fast: false
            max-parallel: 4
            matrix:
                include:
                    - service: adservice
                      language: java
                      sonar_project_key: online-botique_ad
                    - service: cartservice
                      language: csharp
                      sonar_project_key: online-botique_cart
                    - service: checkoutservice
                      language: go
                      sonar_project_key: online-botique_checkout
                    - service: currencyservice
                      language: nodejs
                      sonar_project_key: online-botique_currency
                    - service: emailservice
                      language: python
                      sonar_project_key: online-botique_email
                    - service: frontend
                      language: go
                      sonar_project_key: online-botique_frontend
                    - service: loadgenerator
                      language: go
                      sonar_project_key: online-botique_loadgenerator
                    - service: paymentservice
                      language: nodejs
                      sonar_project_key: online-botique_payment
                      sonar_extra_args: >
                        -Dsonar.c.file.suffixes=-
                        -Dsonar.cpp.file.suffixes=-
                        -Dsonar.objc.file.suffixes=-
                        -Dsonar.exclusions=**/node_modules/**,**/dist/**,**/build/**
                    - service: productcatalogservice
                      language: go
                      sonar_project_key: online-botique_productcatalog
                    - service: recommendationservice
                      language: python
                      sonar_project_key: online-botique_recommendation
                    - service: shippingservice
                      language: go
                      sonar_project_key: online-botique_shipping
        with:
            service: ${{ matrix.service }}
            language: ${{ matrix.language }}
            sonar_project_key: ${{ matrix.sonar_project_key }}
            working_dir: src/${{ matrix.service }}
            sonar_extra_args: ${{ matrix.sonar_extra_args || '' }}

    
  ################TERRAFORM ECR#######################
    ecr_iac:
      name: Provision ECR (Terraform)
      uses: ./.github/workflows/terraform-ecr.yml
      secrets:
        AWS_GHA_ROLE_ARN: ${{ secrets.AWS_GHA_ROLE_ARN }}
      with:
        action: apply
        environment: dev               # or prod, as you like
        aws_region: ${{ vars.AWS_REGION || 'us-east-1' }}
        ecr_namespace: ${{ vars.ECR_NAMESPACE || 'online-boutique' }}
        services_csv: "adservice,cartservice,checkoutservice,currencyservice,emailservice,frontend,loadgenerator,paymentservice,productcatalogservice,recommendationservice,shippingservice"




  ################BUILD-->TRIVY-->PUSH#######################

    build_scan_push_each:
      name: Build-->trivy-->push (${{ matrix.service }})
      needs: [ sonar_each ]
      uses: ./.github/workflows/build-scan-push.yml
      secrets:
        AWS_GHA_ROLE_ARN: ${{ secrets.AWS_GHA_ROLE_ARN }}
      strategy:
        fail-fast: false
        max-parallel: 3
        matrix:
          include:
            - service: adservice
              context: src/adservice
              dockerfile: Dockerfile
              tags_extra: latest
            
            - service: cartservice
              context: src/cartservice/src
              dockerfile: Dockerfile
              tags_extra: latest
            
            - service: checkoutservice
              context: src/checkoutservice
              dockerfile: Dockerfile
              tags_extra: latest

            - service: currencyservice
              context: src/currencyservice
              dockerfile: Dockerfile
              tags_extra: latest

            - service: emailservice
              context: src/emailservice
              dockerfile: Dockerfile
              tags_extra: latest

            - service: frontend
              context: src/frontend
              dockerfile: Dockerfile
              tags_extra: latest

            - service: loadgenerator
              context: src/loadgenerator
              dockerfile: Dockerfile
              tags_extra: ""
              push: false

            - service: paymentservice
              context: src/paymentservice 
              dockerfile: Dockerfile
              tags_extra: "latest"

            - service: productcatalogservice
              context: src/productcatalogservice
              dockerfile: Dockerfile
              tags_extra: "latest"

            - service: recommendationservice
              context: src/recommendationservice
              dockerfile: Dockerfile
              tags_extra: "latest"

            - service: shippingservice
              context: src/shippingservice
              dockerfile: Dockerfile
              tags_extra: "latest"

      with:
        service: ${{ matrix.service }}
        context: ${{ matrix.context }}
        dockerfile: ${{ matrix.dockerfile }}
        aws_region: ${{ vars.AWS_REGION || 'us-east-1' }}
        ecr_namespace: ${{ vars.ECR_NAMESPACE || 'online-boutique' }}
        trivy_severity: HIGH,CRITICAL
        push: ${{ matrix.push || true }}
        tags_extra: ${{ matrix.tags_extra }}
        allow_insecure_push: true 